// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import { Create as $Create } from "@wailsio/runtime";

export class AdbAutoPlayerSettings {
    "Advanced": AdvancedSettings;
    "Device": DeviceSettings;
    "Update": UpdateSettings;
    "Logging": LoggingSettings;
    "User Interface": UISettings;

    /** Creates a new AdbAutoPlayerSettings instance. */
    constructor($$source: Partial<AdbAutoPlayerSettings> = {}) {
        if (!("Advanced" in $$source)) {
            this["Advanced"] = (new AdvancedSettings());
        }
        if (!("Device" in $$source)) {
            this["Device"] = (new DeviceSettings());
        }
        if (!("Update" in $$source)) {
            this["Update"] = (new UpdateSettings());
        }
        if (!("Logging" in $$source)) {
            this["Logging"] = (new LoggingSettings());
        }
        if (!("User Interface" in $$source)) {
            this["User Interface"] = (new UISettings());
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new AdbAutoPlayerSettings instance from a string or object.
     */
    static createFrom($$source: any = {}): AdbAutoPlayerSettings {
        const $$createField0_0 = $$createType0;
        const $$createField1_0 = $$createType1;
        const $$createField2_0 = $$createType2;
        const $$createField3_0 = $$createType3;
        const $$createField4_0 = $$createType4;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("Advanced" in $$parsedSource) {
            $$parsedSource["Advanced"] = $$createField0_0($$parsedSource["Advanced"]);
        }
        if ("Device" in $$parsedSource) {
            $$parsedSource["Device"] = $$createField1_0($$parsedSource["Device"]);
        }
        if ("Update" in $$parsedSource) {
            $$parsedSource["Update"] = $$createField2_0($$parsedSource["Update"]);
        }
        if ("Logging" in $$parsedSource) {
            $$parsedSource["Logging"] = $$createField3_0($$parsedSource["Logging"]);
        }
        if ("User Interface" in $$parsedSource) {
            $$parsedSource["User Interface"] = $$createField4_0($$parsedSource["User Interface"]);
        }
        return new AdbAutoPlayerSettings($$parsedSource as Partial<AdbAutoPlayerSettings>);
    }
}

export class AdvancedSettings {
    "ADB Server Host": string;
    "ADB Server Port": number;
    "AutoPlayer Host": string;
    "AutoPlayer Port": number;
    "Streaming FPS": number;

    /** Creates a new AdvancedSettings instance. */
    constructor($$source: Partial<AdvancedSettings> = {}) {
        if (!("ADB Server Host" in $$source)) {
            this["ADB Server Host"] = "";
        }
        if (!("ADB Server Port" in $$source)) {
            this["ADB Server Port"] = 0;
        }
        if (!("AutoPlayer Host" in $$source)) {
            this["AutoPlayer Host"] = "";
        }
        if (!("AutoPlayer Port" in $$source)) {
            this["AutoPlayer Port"] = 0;
        }
        if (!("Streaming FPS" in $$source)) {
            this["Streaming FPS"] = 0;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new AdvancedSettings instance from a string or object.
     */
    static createFrom($$source: any = {}): AdvancedSettings {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new AdvancedSettings($$parsedSource as Partial<AdvancedSettings>);
    }
}

export class DeviceSettings {
    "ID": string;
    "Resize Display (Phone/Tablet only)": boolean;
    "Device Streaming (disable for slow PCs)": boolean;
    "Enable Hardware Decoding": boolean;

    /** Creates a new DeviceSettings instance. */
    constructor($$source: Partial<DeviceSettings> = {}) {
        if (!("ID" in $$source)) {
            this["ID"] = "";
        }
        if (!("Resize Display (Phone/Tablet only)" in $$source)) {
            this["Resize Display (Phone/Tablet only)"] = false;
        }
        if (!("Device Streaming (disable for slow PCs)" in $$source)) {
            this["Device Streaming (disable for slow PCs)"] = false;
        }
        if (!("Enable Hardware Decoding" in $$source)) {
            this["Enable Hardware Decoding"] = false;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new DeviceSettings instance from a string or object.
     */
    static createFrom($$source: any = {}): DeviceSettings {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new DeviceSettings($$parsedSource as Partial<DeviceSettings>);
    }
}

export class LoggingSettings {
    "Log Level": string;
    "Debug Screenshot Limit": number;
    "Task Log Limit": number;

    /** Creates a new LoggingSettings instance. */
    constructor($$source: Partial<LoggingSettings> = {}) {
        if (!("Log Level" in $$source)) {
            this["Log Level"] = "";
        }
        if (!("Debug Screenshot Limit" in $$source)) {
            this["Debug Screenshot Limit"] = 0;
        }
        if (!("Task Log Limit" in $$source)) {
            this["Task Log Limit"] = 0;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new LoggingSettings instance from a string or object.
     */
    static createFrom($$source: any = {}): LoggingSettings {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new LoggingSettings($$parsedSource as Partial<LoggingSettings>);
    }
}

export class UISettings {
    "Theme": string;
    "Language": string;
    "Close button should minimize the window": boolean;
    "Enable Notifications": boolean;

    /** Creates a new UISettings instance. */
    constructor($$source: Partial<UISettings> = {}) {
        if (!("Theme" in $$source)) {
            this["Theme"] = "";
        }
        if (!("Language" in $$source)) {
            this["Language"] = "";
        }
        if (!("Close button should minimize the window" in $$source)) {
            this["Close button should minimize the window"] = false;
        }
        if (!("Enable Notifications" in $$source)) {
            this["Enable Notifications"] = false;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new UISettings instance from a string or object.
     */
    static createFrom($$source: any = {}): UISettings {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new UISettings($$parsedSource as Partial<UISettings>);
    }
}

export class UpdateSettings {
    "Automatically download updates": boolean;
    "Download Alpha updates": boolean;

    /** Creates a new UpdateSettings instance. */
    constructor($$source: Partial<UpdateSettings> = {}) {
        if (!("Automatically download updates" in $$source)) {
            this["Automatically download updates"] = false;
        }
        if (!("Download Alpha updates" in $$source)) {
            this["Download Alpha updates"] = false;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new UpdateSettings instance from a string or object.
     */
    static createFrom($$source: any = {}): UpdateSettings {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new UpdateSettings($$parsedSource as Partial<UpdateSettings>);
    }
}

// Private type creation functions
const $$createType0 = AdvancedSettings.createFrom;
const $$createType1 = DeviceSettings.createFrom;
const $$createType2 = UpdateSettings.createFrom;
const $$createType3 = LoggingSettings.createFrom;
const $$createType4 = UISettings.createFrom;
