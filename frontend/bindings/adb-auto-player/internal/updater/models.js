// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import { Create as $Create } from "@wailsio/runtime";

export class Changelog {
    /**
     * Creates a new Changelog instance.
     * @param {Partial<Changelog>} [$$source = {}] - The source object to create the Changelog.
     */
    constructor($$source = {}) {
        if (!("body" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["body"] = "";
        }
        if (!("version" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["version"] = "";
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new Changelog instance from a string or object.
     * @param {any} [$$source = {}]
     * @returns {Changelog}
     */
    static createFrom($$source = {}) {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new Changelog(/** @type {Partial<Changelog>} */($$parsedSource));
    }
}

export class UpdateInfo {
    /**
     * Creates a new UpdateInfo instance.
     * @param {Partial<UpdateInfo>} [$$source = {}] - The source object to create the UpdateInfo.
     */
    constructor($$source = {}) {
        if (!("available" in $$source)) {
            /**
             * @member
             * @type {boolean}
             */
            this["available"] = false;
        }
        if (!("version" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["version"] = "";
        }
        if (!("downloadURL" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["downloadURL"] = "";
        }
        if (!("size" in $$source)) {
            /**
             * @member
             * @type {number}
             */
            this["size"] = 0;
        }
        if (!("autoUpdate" in $$source)) {
            /**
             * @member
             * @type {boolean}
             */
            this["autoUpdate"] = false;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new UpdateInfo instance from a string or object.
     * @param {any} [$$source = {}]
     * @returns {UpdateInfo}
     */
    static createFrom($$source = {}) {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new UpdateInfo(/** @type {Partial<UpdateInfo>} */($$parsedSource));
    }
}
