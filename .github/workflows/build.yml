name: Build

on:
  release:
    types:
      - published
  push:
    branches:
      - main
    paths:
      - '**/*'
      - '!docs/**'
      - '!workflows/**'
      - 'workflows/build.yml'

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        include:
          - os: windows-latest
            zip_files: "AdbAutoPlayer_Windows.zip,Patch_Windows.zip"
            build_script: ".github/scripts/build_zip.ps1"
          - os: macos-latest
            zip_files: "AdbAutoPlayer_MacOS.zip,Patch_MacOS.zip"
            build_script: ".github/scripts/build_zip.sh"

    permissions:
      contents: write
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 'latest'

      - name: npm version tag_name
        if: github.event_name == 'release' && github.event.action == 'published'
        working-directory: frontend
        run: npm version "${{ github.event.release.tag_name }}"

      - name: npm install
        working-directory: frontend
        run: npm install

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: install poetry
        run: python -m pip install poetry

      - name: poetry version tag_name
        if: github.event_name == 'release' && github.event.action == 'published'
        working-directory: python
        run: poetry version "${{ github.event.release.tag_name }}"

      - name: poetry install
        working-directory: python
        run: poetry install

      - uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: wails build
        working-directory: cmd/wails
        run: wails build -devtools

      - name: nuitka build windows
        if: matrix.os == 'windows-latest'
        working-directory: python
        run: poetry run nuitka --standalone --onefile --output-filename=adb_auto_player.exe --assume-yes-for-downloads --windows-console-mode=disable adb_auto_player/main.py

      - name: nuitka build macos
        if: matrix.os == 'macos-latest'
        working-directory: python
        run: poetry run nuitka --standalone --onefile --output-filename=adb_auto_player.bin --assume-yes-for-downloads adb_auto_player/main.py

      - name: build zip windows
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: .github/scripts/build_zip.ps1

      - name: build zip macos
        if: matrix.os == 'macos-latest'
        shell: bash
        run: |
          chmod +x .github/scripts/build_zip.sh
          .github/scripts/build_zip.sh

      - uses: softprops/action-gh-release@v2
        if: github.event_name == 'release' && github.event.action == 'published'
        with:
          files: ${{ matrix.zip_files }}
