name: Tests - Python

on:
  pull_request:
    branches: [ "main" ]
    paths:
      - '.github/workflows/python-tests.yml'
      - '.github/codecov.yml'
      - 'python/**'
  push:
    branches: [ "main" ]
    paths:
      - '.github/workflows/python-tests.yml'
      - '.github/codecov.yml'
      - 'python/**'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  python-tests:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest]
        include:
          - os: windows-latest
            source_command: ".\\.venv\\Scripts\\Activate.ps1"
          - os: macos-latest
            source_command: "source .venv/bin/activate"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: macOS install dependencies
        if: runner.os == 'macOS'
        run: |
          brew install tesseract
          brew install --cask android-platform-tools


      - run: python -m pip install uv

      - name: Run Pytests for Codecov Test Analytics
        working-directory: python
        run: |
          uv run pytest --cov --junitxml=junit.xml -o junit_family=legacy
        continue-on-error: true

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          slug: AdbAutoPlayer/AdbAutoPlayer
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: ${{ matrix.os }}
          files: "python/junit.xml"
          disable_search: 'true'

      - name: Upload coverage reports to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/codecov-action@v5
        with:
          slug: AdbAutoPlayer/AdbAutoPlayer
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: ${{ matrix.os }}
          files: "python/junit.xml"
          disable_search: 'true'

      - name: Fail if Pytest Failed
        if: ${{ steps.run_pytest.outputs.exit_code != '' && steps.run_pytest.outputs.exit_code != '0' }}
        run: exit 1
