name: Build on Release

on:
  release:
    types:
      - published

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        include:
          - os: windows-latest
            zip_files: "AdbAutoPlayer_Windows.zip"

    permissions:
      contents: write
      id-token: write

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'

      - name: Update version in package.json using npm
        run: |
            cd cmd/wails/frontend
            npm version "${{ github.event.release.tag_name }}"

      - uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install poetry
        run: |
          python -m pip install poetry

      - name: Update version in pyproject.toml with release tag name
        run: |
          cd python
          poetry version "${{ github.event.release.tag_name }}"

      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Deno install
        run: |
          cd cmd/wails/frontend
          deno install --allow-scripts

      - name: Build Wails project
        run: |
          cd cmd/wails
          wails build -devtools

      - name: Create Python binary
        run: |
          cd python
          poetry install
          poetry run nuitka --standalone --onefile --output-filename=adb_auto_player.exe --assume-yes-for-downloads --windows-console-mode=disable adb_auto_player/main.py

      - name: Collect files into a single directory
        run: |
          chmod +x collect_binaries.sh
          ./collect_binaries.sh

      - name: Zip the contents of the release directory
        run: |
          # Zip all the files inside the release_zip directory
          zip -r $GITHUB_WORKSPACE/${{ matrix.zip_files }} $GITHUB_WORKSPACE/release_zip/
          echo "ZIP file created at $GITHUB_WORKSPACE/${{ matrix.zip_files }}"

      - name: Upload the ZIP to the release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ matrix.zip_files }}
